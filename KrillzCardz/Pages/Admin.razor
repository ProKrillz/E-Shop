@page "/admin";
@using System.IO;
@using KrillzCardz.Components;
@using KrillzCardz.Services;
@using KrillzCardz.Services.DTO;
@inject IProduct _productService;
@inject IJSRuntime js;

<div class="container">
    <br />
    <div class="row">
        <button class="waves-effect waves-light btn view col l2 right" onclick="$('#modal1').modal('open')">Opret Product</button>
    </div>
    <br />
    <table class="striped highlight">
        <thead>
            <tr>
                <th>Titel</th>
                <th>Beskrivelse</th>
                <th>Pris</th>
                <th>Brand</th>
                <th>Kategori</th>
                <th>Set</th>
                <th>Rediger</th>
                <th>Slet</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in products)
            {
                <tr>
                    <th>@item.name</th>
                    <th>@item.description</th>
                    <th>@item.price</th>
                    <th>@item.brand</th>
                    <th>@item.category</th>
                    <th>@item.set</th>
                    <th>
                        <a class="btn waves-effect waves-light yellow darken-1" @onclick="x => FindUpdate(item.productId)">
                            <i class="material-icons" onclick="$('#modal3').modal('open')">edit</i>
                        </a>
                    </th>
                    <th>
                        <button class="btn waves-effect waves-light red darken-1" @onclick="x => Delete(item.productId)">
                            <i class="material-icons">delete</i>
                        </button>
                    </th>
                </tr>
            }
        </tbody>
    </table>
    <div class=" row">
        <ul class="pagination center">
            <li class=@(currentPage == 1 ? "disabled" : "waves-effect")><a @onclick="PreviousPage"><i class="material-icons">chevron_left</i></a></li>
            @for (var i = 1; i <= totalPages; i++)
            {
                <li class="@(i == currentPage ? "active" : "")"><a>@i</a></li>
            }
            <li class=@(totalPages == currentPage ? "disabled" : "waves-effect")><a @onclick="NextPage"><i class="material-icons">chevron_right</i></a></li>
        </ul>
    </div>

    <div id="modal1" class="modal">
        <div class="modal-content">
            <div class="row">
                <h4 class="col">Opret product</h4>
                <a class="modal-close waves-effect waves-green btn-flat right col">Luk</a>
            </div>
            <div class="col s12" method="post" enctype="multipart/form-data">
                <div class="row">
                    <div class="input-field col s6">
                        <i class="material-icons prefix">title</i>
                        <input id="icon_prefix" type="text" class="validate" @bind="creatProduct.name">
                        <label for="icon_prefix">Title</label>
                    </div>
                    <div class="input-field col s6">
                        <i class="material-icons prefix">description</i>
                        <input id="icon_lastname" type="text" class="validate" @bind="creatProduct.description">
                        <label for="icon_lastname">Beskrivelse</label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s6">
                        <i class="material-icons prefix">attach_money</i>
                        <input id="icon_add" type="number" class="validate" @bind="creatProduct.price">
                        <label for="icon_add">Pris</label>
                    </div>
                    <div class="input-field col s6">
                        <select @onchange="ChangeSet" required>
                           @* @foreach (var item in sets)
                            {
                                <option value="@item.setid">@item.setname</option>
                            }*@
                            <option value="BLCR">Battle of legend: Crystal revenge</option>
                            <option value="CYAC">Cyberstorm access</option>
                            <option value="DABL">Darkwing blast</option>
                            <option value="MAMA">Magnificent mavens</option>
                            <option value="PHHY">Photon hypernova</option>
                            <option value="POTE">Power of the Elements</option>
                           
                        </select>
                        <label>Set</label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s6">
                        <select @onchange="ChangeBrand" required>
                            <option value="1">Konami</option>
                        </select>
                        <label>Brand</label>
                    </div>
                    <div class="input-field col s6">
                        <select @onchange="ChangeCat" required>
                            <option value="1">Single</option>
                            <option value="2">Booster</option>
                            <option value="3">Box</option>
                        </select>
                        <label>Kategori</label>
                    </div>
                </div>
                <div class="row">

                    <div class="file-field input-field">
                        <div class="btn">
                            <span>File</span>
                            <InputFile OnChange="ImageHandler" />
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
                <button class="btn waves-effect waves-light" type="submit" name="action" @onclick="CreateProductSite">
                    Opret
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </div>
    </div>

    <div id="modal3" class="modal">
        <div class="modal-content">
            <EditForm Model="@updateProduct" OnSubmit="UpdateProduct">

            <div class="row">
                <h4 class="col">Opdater product</h4>
                <a class="modal-close waves-effect waves-green btn-flat right col">Luk</a>
            </div>
            <div class="col s12" method="post" enctype="multipart/form-data">
                <div class="row">
                    <div class="input-field col s6">
                        <i class="material-icons prefix">title</i>
                        <input id="icon_prefix" type="text" class="validate" @bind-value="updateProduct.name">
                            <label class="active" for="icon_prefix">Title</label>
                    </div>
                    <div class="input-field col s6">
                        <i class="material-icons prefix">description</i>
                        <input id="icon_lastname" type="text" class="validate" @bind-value="updateProduct.description">
                            <label class="active" for="icon_lastname">Beskrivelse</label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s6">
                        <i class="material-icons prefix">attach_money</i>
                            <input id="icon_add" type="number" class="validate" @bind-value="updateProduct.price">
                            <label class="active" for="icon_add">Pris</label>
                    </div>
                    <div class="input-field col s6">
                        <InputSelect @bind-Value="updateProduct.set" required>
                            @* @foreach (var item in sets)
                            {
                            <option value="@item.setid">@item.setname</option>
                            }*@
                            <option value="BLCR">Battle of legend: Crystal revenge</option>
                            <option value="CYAC">Cyberstorm access</option>
                            <option value="DABL">Darkwing blast</option>
                            <option value="MAMA">Magnificent mavens</option>
                            <option value="PHHY">Photon hypernova</option>
                            <option value="POTE">Power of the Elements</option>
                        </InputSelect>
                        <label>Set</label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s6">
                        <InputSelect @bind-Value="updateProduct.brand" required>
                            <option value="1">Konami</option>
                        </InputSelect>
                        <label>Brand</label>
                    </div>
                    <div class="input-field col s6">
                        <InputSelect @bind-Value="updateProduct.category" required>
                            <option value="1">Single</option>
                            <option value="2">Booster</option>
                            <option value="3">Box</option>
                        </InputSelect>
                        <label>Kategori</label>
                    </div>
                </div>
                <div class="row">

                    <div class="file-field input-field">
                        <div class="btn">
                            <span>File</span>
                            <InputFile OnChange="ImageHandler" />
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
                <button class="btn waves-effect waves-light" type="submit">
                    Opdater
                    <i class="material-icons right">send</i>
                </button>
            </div>
            </EditForm>
        </div>
    </div>

</div>
@code {
    private List<ProductModel> products = new();

    private CreateProductModel creatProduct = new();
    private List<SetModel> sets = new();

    private ProductModel updateProduct = new();

    private int currentPage = 1;

    private int pages = 9;

    private int count;

    private int totalPages => (int)Math.Ceiling(decimal.Divide(count, pages));

    private IBrowserFile file;

    protected override async Task OnInitializedAsync()
    {
        products = await _productService.GetProductWithPageing(currentPage, pages);
        count = await _productService.CountProducts();
        sets = await _productService.GetAllSets();
        await js.InvokeVoidAsync("modalM");
        await js.InvokeVoidAsync("loadSelect");
        await js.InvokeVoidAsync("updateText");
    }
    private async Task NextPage()
    {
        products = await _productService.GetProductWithPageing(++currentPage, pages);
    }
    private async Task PreviousPage()
    {
        products = await _productService.GetProductWithPageing(--currentPage, pages);
    }
    private async Task CreateProductSite()
    {
        await _productService.CreateProduct(creatProduct);
    }
    async Task ChangeSet(ChangeEventArgs eventarg)
    {
        creatProduct.setId = eventarg.Value.ToString();

    }
    async Task ChangeCat(ChangeEventArgs eventarg)
    {
        creatProduct.catId = Convert.ToInt32( eventarg.Value);

    }
    async Task ChangeBrand(ChangeEventArgs eventarg)
    {
        creatProduct.brandId = Convert.ToInt32(eventarg.Value);

    }
    async Task ImageHandler(InputFileChangeEventArgs image)
    {
        file = image.File;
        var stream = file.OpenReadStream();
        var buffer = new byte[file.Size];
        await stream.ReadAsync(buffer, 0, (int)file.Size);
        string rootPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot");
        //byte[] fileBytes = await fileInputComponent.GetFileBytesAsync(); ;
        creatProduct.imagePath = $"\\Image\\Card\\{file.Name}";
        //File.WriteAllBytes(creatProduct.imagePath, fileBytes);
    }
    private async Task Delete(int id)
    {
        await _productService.DeleteProduct(id);            
    }
    private async Task FindUpdate(int id)
    {
        updateProduct = await _productService.GetProductById(id);
    }
    private async Task UpdateProduct()
    {
        
    }

}
